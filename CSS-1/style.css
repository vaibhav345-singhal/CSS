/* order will matter in css which css will come in last will be added  */
/* 
inline css
internal css
external css

best way is to use external css */


/* Tag selector :- we use html tags as selectors */

P {
    border: 1px solid goldenrod;
    color: bisque;
    background-color: black;
}

/* Class selector :- we use class name as selector by giving a class name */
/* .class-name{
    property:value
} */

.para {
    border: 1px dotted black;
    color: aliceblue;
    background-color: black;
}

.btn {
    border: 1px solid green;
    border-radius: 10px;
    padding: 10px 22px;
    width: 10%;
}


/* Id Selector :- we use id name as a selector and it cant be duplicate */
/* #id-name{
    property:value
} */
#para-id {
    border: 1px dotted black;
    color: blanchedalmond;
    background-color: black;
}

#btn-1 {
    background-color: black;
    color: bisque;
}

#btn-2 {
    background-color: brown;
    color: aliceblue;
}

/* universal selector :- selects all the element in the html page */

* {
    text-align: center;
}

/* Grouping selector :- used for grouping different selector with same style */
/* can add all types of selector  */
p,
h1 {
    font-weight: 300;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    color: aqua;
    background-color: black;
}

/* combinator selector */
/* 1. General Sibling Selector */


/* target all the p tags that are siblings of elements which have class-name as `head` */

.head~p {
    color: lightpink;
}


/* 2. Adjacent sibling selector */
/* targets the sibling p tag that come immediately after h1 tag */

h1+p {
    color: lightslategray;
}



/* 3. Child Selector */
/* targets all the direct children */

div>p {
    color: red;
}


/* 4. descendent selector
targets all the descendants of an element */

div p {
    color: lightgoldenrodyellow;
}


/* selector[attribute_name="attribute_value"] */

input[type="text"],
input[type="email"] {
    border: 1px solid blue;
    border-radius: 8px;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

a[target="_blank"] {
    background-color: yellow;
}

/* used to style specified parts of an element */
/* syntax: 
selector::pseudo-element{} */

#ps-demo::first-letter {
    color: aliceblue;
}

#ps-demo::first-line {
    color: greenyellow;
}

#ps-demo::after {
    content: "This is using after";
    color: lightsalmon;
}

#ps-demo::before {
    content: "This is using before psuedo element";
    color: brown
}

/* psuedo class Selector */
/* Syntax => any_selector:psuedo-class */

td {
    width: 50px;
    height: 50px;
    background-color: aquamarine;
}

td:nth-child(2n):hover {
    width: 100px;
    height: 100px;
    background-color: lightcoral
}

td:nth-child(2n-1):hover {
    width: 100px;
    height: 100px;
    background-color: lightsalmon
}

input:focus {
    background-color: lightskyblue;
    color: black;
}